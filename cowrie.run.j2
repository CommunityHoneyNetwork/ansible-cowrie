#!/bin/bash

trap "exit 130" SIGINT
trap "exit 137" SIGKILL
trap "exit 143" SIGTERM

set -o errexit
set -o nounset
set -o pipefail

COWRIE_JSON='/etc/cowrie/cowrie.json'

register () {
  local deploy_key="${1:-}"
  local server="${2:-localhost}"
  local json="${3:-cowrie}"
  local hostname="$(hostname -f)"
  local honeypot="cowrie"

  # Create the cowrie dir if it's not there
  if [[ ! -d /etc/${honeypot} ]]
  then
    mkdir -p /etc/${honeypot}
  fi

  if [[ -z ${deploy_key} ]]
  then
    return 1
  fi

  curl --request POST \
       --header "Content-Type: application/json" \
       --connect-timeout 15 \
       --silent \
       --data "{
         \"name\": \"${hostname}-${honeypot}\",
         \"hostname\": \"$hostname\",
         \"deploy_key\": \"$deploy_key\",
         \"honeypot\": \"$honeypot\"
       }" ${server}/api/sensor/ > ${json}


}

setup_cowrie_conf () {
  local sever=${1:-}
  local sever_port=${2:-}
  local uid=${3:-}
  local secret=${4:-}
  local ssh_port=${5:-2222}
  local debug=${6:-false}

  pushd /opt/cowrie
  cp cowrie.cfg.dist cowrie.cfg

  sed -i "s/hostname = svr04/hostname = server/g" cowrie.cfg
  sed -i "s/#listen_port = 2222/listen_port = ${ssh_port}/g" cowrie.cfg
  sed -i "s/ssh_version_string = SSH-2.0-OpenSSH_6.0p1 Debian-4+deb7u2/ssh_version_string = SSH-2.0-OpenSSH_6.7p1 Ubuntu-5ubuntu1.3/g" cowrie.cfg
  sed -i "s/#\[output_hpfeeds\]/[output_hpfeeds]/g" cowrie.cfg
  sed -i "s/#server = hpfeeds.mysite.org/server = ${server}/g" cowrie.cfg
  sed -i "s/#port = 10000/port = ${server_port}/g" cowrie.cfg
  sed -i "s/#identifier = abc123/identifier = ${uid}/g" cowrie.cfg
  sed -i "s/#secret = secret/secret = ${secret}/g" cowrie.cfg
  sed -i "s/#debug=false/debug=${debug}/" cowrie.cfg

  popd

}

main () {
  source {{ sysconfig_dir }}/cowrie

  if [[ ${DEBUG} == "true" ]]
  then
    set -o xtrace
  fi

  local deploy_key=${DEPLOY_KEY:-}
  local server=${FEEDS_SERVER:-localhost}
  local server_port=${FEEDS_SERVER_PORT:-10000}
  local json=${COWRIE_JSON:-cowrie.json}
  local ssh_port=${SSH_LISTEN_PORT:-2222}

  local debug=${DEBUG:-false}

  if [[ -z ${deploy_key} ]]
  then
    echo "[CRIT] - No deploy key found"
    exit 1
  fi

  if ! jq -e ".uuid" /etc/cowrie/cowrie.json
  then
    echo "Attempting to register wtih ${server}"
    register ${deploy_key} ${server} ${json}

    return=$?

    if [[ $return -ne 0 ]]
    then
      echo "Failed to register with ${server} using key: ${deploy_key}"
      exit 1
    fi
  fi

  local uuid=$(python -c "import json;obj=json.load(file('${json}'));print obj['uuid']")

  if [ -z "$uuid" ]
  then
    echo "Could not create sensor using name \"$(hostname -f)\"."
    exit 1
  else
    echo "Created sensor: " $uuid
  fi

  local server=$(echo $server | sed 's#^http://##; s#^https://##; s#/.*$##; s/:.*$//')
  local uid=$(python -c "import json;obj=json.load(file('${json}'));print obj['identifier']")
  local secret=$(python -c "import json;obj=json.load(file('${json}'));print obj['secret']")

  setup_cowrie_conf ${server} \
                    ${server_port} \
                    ${uid} ${secret} \
                    ${ssh_port} \
                    ${debug}

  exec su - cowrie -c "/opt/cowrie/bin/cowrie start"
}

main "$@"
