#!/bin/bash

trap "exit 130" SIGINT
trap "exit 137" SIGKILL
trap "exit 143" SIGTERM

set -o errexit
set -o nounset
set -o pipefail

COWRIE_JSON='/etc/cowrie/cowrie.json'

register () {
  local deploy_key="${1:-}"
  local chnserver="${2:-localhost}"
  local json="${3:-cowrie}"
  local hostname="$(hostname -f)"
  local ip="${4:-}"
  local honeypot="cowrie"

  if [[ -z ${deploy_key} ]]
  then
    return 1
  fi

  curl --verbose \
       --silent \
       --request POST \
       --header "Content-Type: application/json" \
       --output ${json} \
       --data "{
    \"name\": \"${hostname}-${honeypot}\",
    \"hostname\": \"$hostname\",
    \"ip\": \"${ip}\",
    \"deploy_key\": \"$deploy_key\",
    \"honeypot\": \"$honeypot\"
  }" ${chnserver}/api/sensor/
}

setup_cowrie_conf () {
  local server=${1:-}
  local server_port=${2:-}
  local uid=${3:-}
  local secret=${4:-}
  local ssh_port=${5:-2222}
  local telnet_port=${6:-2223}
  local debug=${7:-false}
  local personality=${8:-}
  local tags=${9:-}

  # Set up some defaults we can overwrite later
  cp /opt/cowrie/etc/userdb.example /opt/cowrie/etc/userdb.txt

  pushd /opt/cowrie/etc
  if [[ ${personality} != "default" ]] && [[ -d /opt/personalities/${personality} ]]
  then
    if [[ -f /opt/personalities/${personality}/cowrie.cfg  ]]
    then
      cp /opt/personalities/${personality}/cowrie.cfg /opt/cowrie/etc/cowrie.cfg
    fi
    if [[ -f /opt/personalities/${personality}/fs.pickle  ]]
    then
      cp /opt/personalities/${personality}/fs.pickle /opt/cowrie/share/cowrie/fs.pickle
    fi
    if [[ -f /opt/personalities/${personality}/userdb.txt  ]]
    then
      cp /opt/personalities/${personality}/userdb.txt /opt/cowrie/etc/userdb.txt
    fi
    if [[ -d /opt/personalities/${personality}/txtcmds  ]]
    then
      cp -R /opt/personalities/${personality}/txtcmds /opt/cowrie/share/cowrie/
    fi
  fi

  sed -i "s/hostname = svr04/hostname = server/g" cowrie.cfg.dist
  sed -i "s/listen_endpoints = tcp:2222:interface=0.0.0.0/listen_endpoints = tcp:${ssh_port}:interface=0.0.0.0/g" cowrie.cfg.dist
  sed -i "s/listen_endpoints = tcp:2223:interface=0.0.0.0/listen_endpoints = tcp:${telnet_port}:interface=0.0.0.0/g" cowrie.cfg.dist
  perl -p -000 -i -e  "s/# Enable Telnet support, disabled by default\s+enabled = false/# Enable Telnet support, disabled by default\nenabled = true/g" cowrie.cfg.dist
  perl -p -000 -i -e "s/#\[output_hpfeeds\]\s+#enabled = false/[output_hpfeeds]\nenabled = true/g" cowrie.cfg.dist
  sed -i "s/#server = hpfeeds.mysite.org/server = ${server}/g" cowrie.cfg.dist
  perl -p -000 -i -e "s/#port = 10000/port = ${server_port}/g" cowrie.cfg.dist
  sed -i "s/#identifier = abc123/identifier = ${uid}/g" cowrie.cfg.dist
  sed -i "s|#secret = secret|secret = ${secret}\ntags = ${tags}|g" cowrie.cfg.dist
  sed -i "s/#debug=false/debug=${debug}/g" cowrie.cfg.dist

  popd

}

main () {
  source {{ sysconfig_dir }}/cowrie

  if [[ ${DEBUG} == "true" ]]
  then
    set -o xtrace
  fi

  local deploy_key=${DEPLOY_KEY:-}
  local chn_server=${CHN_SERVER}
  local feeds_server=${FEEDS_SERVER:-localhost}
  local feeds_server_port=${FEEDS_SERVER_PORT:-10000}
  local json=${COWRIE_JSON:-cowrie.json}
  local ip=${IP_ADDRESS:-}
  local ssh_port=${SSH_LISTEN_PORT:-2222}
  local telnet_port=${TELNET_LISTEN_PORT:-2223}
  local personality=${PERSONALITY:-default}
  local tags=${TAGS:-}

  local debug=${DEBUG:-false}

  if [[ -z ${deploy_key} ]]
  then
    echo "[CRIT] - No deploy key found"
    exit 1
  fi

  # If it doesn't exist or is empty
  if [[ ! -f ${json}  ]] || [[ ! -s ${json} ]]
  then
    register ${deploy_key} ${chn_server} ${json} ${ip}

    return=$?

    if [[ $return -ne 0 ]]
    then
      echo "Failed to register with ${chn_server} using key: ${deploy_key}"
      exit 1
    fi
  fi

  local uuid=$(python -c "import json;obj=json.load(file('${json}'));print obj['uuid']")

  if [ -z "$uuid" ]
  then
    echo "Could not create sensor using name \"$(hostname -f)\"."
    exit 1
  else
    echo "Created sensor: " $uuid
  fi

  local feeds_server=$(echo $feeds_server | sed 's#^http://##; s#^https://##; s#/.*$##; s/:.*$//')
  local uid=$(python -c "import json;obj=json.load(file('${json}'));print obj['identifier']")
  local secret=$(python -c "import json;obj=json.load(file('${json}'));print obj['secret']")

  setup_cowrie_conf ${feeds_server} \
                    ${feeds_server_port} \
                    ${uid} ${secret} \
                    ${ssh_port} \
                    ${telnet_port} \
                    ${debug} \
                    ${personality} \
                    "${tags}"

  exec su - cowrie -c "/opt/cowrie/bin/cowrie start"
}

main "$@"
